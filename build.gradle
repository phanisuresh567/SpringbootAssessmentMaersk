plugins {
  id 'org.springframework.boot' version '2.3.5.RELEASE'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id 'java'
  id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'com.maersk.springboot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

swaggerSources {
    def typeMappings = 'URI=URI, BigDecimal=BigDecimal, EntityModel=EntityModel'
    def importMappings = 'URI=java.net.URI, BigDecimal=java.math.BigDecimal, EntityModel=org.springframework.hateoas.EntityModel'
    colorStore {
        def apiYaml = "${rootDir}/src/main/resources/api/openapi_2.yaml"
    def configJson = "${rootDir}/src/main/resources/api/config.json"
    inputFile = file(apiYaml)
    def ignoreFile = file("${rootDir}/src/main/resources/api/.openapi-generator-ignore")
    code {
      language = 'spring'
      configFile = file(configJson)
      rawOptions = ['--ignore-file-override', ignoreFile, '--type-mappings',
										typeMappings, '--import-mappings', importMappings] as List<String>
      components = [models: true, apis: true, supportingFiles: 'ApiUtil.java']
    }
  }
}

compileJava.dependsOn swaggerSources.colorStore.code
sourceSets.main.java.srcDir "${swaggerSources.colorStore.code.outputDir}/src/main/java"
sourceSets.main.resources.srcDir "${swaggerSources.colorStore.code.outputDir}/src/main/resources"

repositories {
  mavenCentral()
}

dependencies {
//OpenAPI
  swaggerCodegen 'org.openapitools:openapi-generator-cli:4.3.1'
  compileOnly 'io.swagger:swagger-annotations:1.6.2'
  compileOnly 'org.springframework.boot:spring-boot-starter-validation'
  compileOnly 'org.openapitools:jackson-databind-nullable:0.2.1'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
  implementation 'org.springframework.boot:spring-boot-starter-hateoas'

    // DB Starts
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    // DB Ends
  implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation('org.springframework.boot:spring-boot-starter-test') 
  }
}

test {
  useJUnitPlatform()
}